if(!dir.exists(paste0(getwd(), '/VAST_output', modelno, '/'))) {
dir.create(paste0(getwd(), '/VAST_output', modelno, '/'))
}
## Import Data
data = ifelse(modelno != '8',
read.csv(file = 'data/data/GOA_multspp.csv'),
read.csv(file = 'data/data/GOA_multspp_bathy.csv'))
modelno
modelno != '8'
## Import Data
data = ifelse(modelno == '8',
read.csv(file = 'data/data/GOA_multspp.csv'),
read.csv(file = 'data/data/GOA_multspp_bathy.csv'))
data
## Import Data
if(modelno == '8'){
data = read.csv(file = 'data/data/GOA_multspp.csv')
} else( data = read.csv(file = 'data/data/GOA_multspp_bathy.csv'))
head(data)
## Import Data
if(modelno != '8'){
data = read.csv(file = 'data/data/GOA_multspp.csv')
} else( data = read.csv(file = 'data/data/GOA_multspp_bathy.csv'))
head(data)
modelno
save.image(paste0(getwd(), '/VAST_output', modelno, '/Spatial_Settings.RData') )
source('C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/Spatial_Settings.R', echo=TRUE)
###############################
## Spatial Settings for VAST
###############################
rm(list = ls())
library(VAST)
setwd( 'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/')
modelno = '8' #6j is going to be same as 6g but resorted
if(!dir.exists(paste0(getwd(), '/VAST_output', modelno, '/'))) {
dir.create(paste0(getwd(), '/VAST_output', modelno, '/'))
}
## Import Data
if(modelno != '8'){
data = read.csv(file = 'data/data/GOA_multspp.csv')
} else( data = read.csv(file = 'data/data/GOA_multspp_bathy.csv'))
# Prepare the Data-frame for catch-rate data
Data_Geostat = data.frame( "spp"=data$SPECIES_NAME,
"Year"=data$YEAR,
"Catch_KG"=data$WEIGHT,
"AreaSwept_km2"=data$EFFORT,
"Vessel"=0,
"Lat"=data$LATITUDE,
"Lon"=data$LONGITUDE,
"LOG_DEPTH" = data$DEPTH, #centered log_depth
"LOG_DEPTH2" = data$DEPTH^2 )
rm(data)
head(Data_Geostat)
#Drop factor levels of unused Species
spp_df = read.csv("spp_df.csv", check.names=F, header = T,
row.names = 'modelno')
#Drop factor levels of unused Species
spp_df = read.csv("spp_df.csv", check.names=F, header = T,
row.names = 'modelno')
which_spp = unlist(spp_df[modelno,])
Data_Geostat = subset(Data_Geostat, spp %in% names(which_spp)[which_spp])
Data_Geostat$spp = droplevels(Data_Geostat$spp)
## Spatial settings: The following settings define the spatial resolution
## for the model, and whether to use a grid or mesh approximation
Method = c("Grid", "Mesh", "Spherical_mesh")[2]
#grid_size_km = 50
n_x = 350   # Specify number of stations (a.k.a. "knots")
## Stratification for results
strata.limits <- data.frame(
'STRATA' = c("All_areas"),#, "west_of_140W"),
'west_border' = c(-Inf),#, -Inf),
'east_border' = c(Inf)#, -140)
)
Extrapolation_List = make_extrapolation_info( Region= "Gulf_of_Alaska",
strata.limits = strata.limits )
fine_scale = T
Spatial_List = make_spatial_info( n_x=n_x,
Method=Method,
Lon_i=Data_Geostat[,'Lon'],
Lat_i=Data_Geostat[,'Lat'],
Extrapolation_List=Extrapolation_List,
DirPath=paste0(getwd(), '/VAST_output',
modelno, '/'),
fine_scale = fine_scale,
Save_Results=T )
# Add knots to Data_Geostat
Data_Geostat = cbind( Data_Geostat,
"knot_i"=Spatial_List$knot_i )
#plot data points and knots
plot(Spatial_List$latlon_i[,2:1])
points(Spatial_List$latlon_x[,2:1], col = 'red', pch = 16, cex = 1)
save.image(paste0(getwd(), '/VAST_output', modelno, '/Spatial_Settings.RData') )
#plot data points and knots
plot(Spatial_List$latlon_i[,2:1], pch = 16)
#plot data points and knots
plot(Spatial_List$latlon_i[,2:1], pch = 16, asp = 1, cex = 0.25)
#plot data points and knots
par(mar = c(0,0,0,0))
plot(Spatial_List$latlon_i[,2:1], pch = 16, asp = 1, cex = 0.25)
points(Spatial_List$latlon_x[,2:1], col = 'red', pch = 16, cex = 1)
#plot data points and knots
par(mar = c(0,0,0,0))
plot(Spatial_List$latlon_i[,2:1], pch = 16, asp = 1, cex = 0.5)
rm(list = ls())
library(VAST)
VAST_dir = 'C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/VAST_output8/'
github_dir = 'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/'
## Import Settings
load(paste0(VAST_dir, 'Model_Settings.RData'))
load(paste0(VAST_dir, 'Spatial_Settings.RData'))
VAST_dir = 'C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/VAST_output6g/'
github_dir = 'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/VAST_output8/'
github_dir = 'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/VAST_output8/'
## Import Settings
load(paste0(github_dir, 'Model_Settings.RData'))
load(paste0(github_dir, 'Spatial_Settings.RData'))
head(Data_Geostat)
TmbData = make_data("Version"=Version,
"FieldConfig"=FieldConfig,
"OverdispersionConfig"=OverdispersionConfig,
"RhoConfig"=RhoConfig,
"ObsModel_ez" = c(PosDist = 2, Link = 0),
"c_i"=as.numeric(Data_Geostat[,'spp'])-1,
"b_i"=Data_Geostat[,'Catch_KG'],
"a_i"=Data_Geostat[,'AreaSwept_km2'],
"v_i"=as.numeric(Data_Geostat[,'Vessel'])-1,
"s_i"=Data_Geostat[,'knot_i']-1,
"t_i"=Data_Geostat[,'Year'],
"spatial_list"=Spatial_List,
"Options"=Options ,
formula = "Catch_KG ~ LOG_DEPTH + LOG_DEPTH2",
covariate_data = cbind(Data_Geostat[,c('Lat', 'Lon',
'LOG_DEPTH',
'LOG_DEPTH2',
'Catch_KG')],
Year = NA)
)
str(TmbData$X_gtp)
#Add "true" and not interpolated covariate data
load(paste0(github_dir, '/Extrapolation_depths.RData'))
dirname(github_dir)
#Add "true" and not interpolated covariate data
load(paste0(dirname(github_dir), '/Extrapolation_depths.RData'))
X_gtp = array(dim = c(TmbData$n_g,TmbData$n_t, TmbData$n_p) )
head(Extrapolation_depths)
X_gtp = array(dim = c(TmbData$n_g,TmbData$n_t, 1) )
for(i in 1:TmbData$n_t) {
X_gtp[,i,] = as.matrix(Extrapolation_depths[,c('depth')])
}
#Add "true" and not interpolated covariate data
load(paste0(dirname(github_dir), '/Extrapolation_depths.RData'))
X_gtp = array(dim = c(TmbData$n_g,TmbData$n_t, 1) )
for(i in 1:TmbData$n_t) {
X_gtp[,i,] = as.matrix(Extrapolation_depths[,c('depth')])
}
str(X_gtp)
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1],
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
par(mar = c(4,4,1,1))
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1],
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
cor(X_gtp[,1,1], TmbData$X_gtp[,1,1])
plot( x = log(X_gtp[,1,1]), y = log(TmbData$X_gtp[,1,1]),
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
par(mar = c(4,4,1,1))
plot( x = log10(X_gtp[,1,1]), y = log10(TmbData$X_gtp[,1,1]),
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], log = T,
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], logxy = T,
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
?plot
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], log = 'xy',
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
cor(X_gtp[,1,1], TmbData$X_gtp[,1,1])
cor(log10(X_gtp[,1,1]), log10(TmbData$X_gtp[,1,1]))
range(Data_Geostat$LOG_DEPTH)
rect(xleft = max(Data_Geostat$LOG_DEPTH),
xright = max(Data_Geostat$LOG_DEPTH)*2,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,0.5))
rect(xleft = log10(max(Data_Geostat$LOG_DEPTH)),
xright = log10(max(Data_Geostat$LOG_DEPTH)*2),
ybottom = 0, ytop = 1000, col = hsv(1,1,1,0.5))
log10(max(Data_Geostat$LOG_DEPTH))
rect(xleft = log10(max(Data_Geostat$LOG_DEPTH)),
xright = log10(max(Data_Geostat$LOG_DEPTH)*2),
ybottom = 0, ytop = 1000, col = hsv(.5,1,1,0.5))
log10(max(Data_Geostat$LOG_DEPTH)*2)
rect(xleft = log10(max(Data_Geostat$LOG_DEPTH)),
xright = log10(max(Data_Geostat$LOG_DEPTH)*2),
ybottom = 0, ytop = 1000, col = 'blue')
locator()
rect(xleft = max(Data_Geostat$LOG_DEPTH),
xright = max(Data_Geostat$LOG_DEPTH)*2,
ybottom = 0, ytop = 1000, col = 'blue')
dev.off()
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], log = 'xy',
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
rect(xleft = max(Data_Geostat$LOG_DEPTH),
xright = max(Data_Geostat$LOG_DEPTH)*2,
ybottom = 0, ytop = 1000, col = 'blue')
par(mar = c(4,4,1,1))
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], #log = 'xy',
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
rect(xleft = max(Data_Geostat$LOG_DEPTH),
xright = max(Data_Geostat$LOG_DEPTH)*2,
ybottom = 0, ytop = 1000, col = 'blue')
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], #log = 'xy',
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
cor(log10(X_gtp[,1,1]), log10(TmbData$X_gtp[,1,1]))
rect(xleft = max(Data_Geostat$LOG_DEPTH),
xright = max(Data_Geostat$LOG_DEPTH)*3,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,.25))
rect(xleft = 0,
xright = min(Data_Geostat$LOG_DEPTH)*3,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,.25))
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], pch = 16, cex = 0.5, #log = 'xy',
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
rect(xleft = max(Data_Geostat$LOG_DEPTH),
xright = max(Data_Geostat$LOG_DEPTH)*3,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,.25))
rect(xleft = 0,
xright = min(Data_Geostat$LOG_DEPTH)*3,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,.25))
rect(xleft = -50,
xright = min(Data_Geostat$LOG_DEPTH)*3,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,.25))
par(mar = c(4,4,1,1))
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1], pch = 16, cex = 0.25, #log = 'xy',
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
abline(a = 0, b = 1, col = 'red', lwd = 3)
rect(xleft = max(Data_Geostat$LOG_DEPTH),
xright = max(Data_Geostat$LOG_DEPTH)*3,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,.25))
rect(xleft = -50,
xright = min(Data_Geostat$LOG_DEPTH)*3,
ybottom = 0, ytop = 1000, col = hsv(1,1,1,.25))
shape_dir = 'C:\Users\Zack Oyafuso\Desktop\survey_grids'
shape_dir = 'C:\\Users\\Zack Oyafuso\\Desktop\\survey_grids'
shape_dir = 'C:\\Users\\Zack Oyafuso\\Desktop\\survey_grids\\'
plot( x = X_gtp[,1,1], y = TmbData$X_gtp[,1,1],
las = 1, pch = 16, cex = 0.25, #log = 'xy',
xlab = 'Bathymetry from MarMap', ylab = 'Interpolated Survey Bathymetry')
shape_dir = 'C:\\Users\\Zack Oyafuso\\Desktop\\survey_grids\\'
library(VAST); library(sp)
library(VAST); library(sp); library(rgeos)
library(VAST); library(sp); library(rgdal)
dir(shape_dir)
goa = readOGR(paste0(shape_dir, 'goagrid_nolandsandman.shp'))
goa
dir(shape_dir)
goa = readOGR(paste0(shape_dir, 'goagrid2019_landuntrawlsndmn.shp'))
goa
##################################
## Assign bathymetry value to each extrapolation grid
## Gulf of Alaska
#################################
rm(list = ls())
# setwd( 'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
setwd( 'C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
##################################
## Import Libraries
#################################
library(marmap); library(sp); library(RANN); library(raster);
which_machine = c('Zack_MAC'=1, 'Zack_PC' =2, 'Zack_GI_PC'=3)[3]
##################################
## Load Extrapolation Grid used in VAST
#################################
modelno = '6j'
##################################
## Load Extrapolation Grid used in VAST
#################################
modelno = '6g'
setwd( c('',
'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/',
'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')[which_machine] )
which_machine = c('Zack_MAC'=1, 'Zack_PC' =2, 'Zack_GI_PC'=3)[2]
##################################
## Load Extrapolation Grid used in VAST
#################################
modelno = '6g'
setwd( c('',
'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/',
'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')[which_machine] )
load(paste0('VAST_output', modelno, '/', 'Spatial_Settings.RData'))
dir()
##################################
## Load Extrapolation Grid used in VAST
#################################
modelno = '8'
setwd( c('',
'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/',
'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')[which_machine] )
load(paste0('VAST_output', modelno, '/', 'Spatial_Settings.RData'))
observed_depths = read.csv('data/data/GOA_multspp.csv')$BOTTOM_DEPTH
source('C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/Extrapolation_Grid_Covariates.R', echo=TRUE)
test
##################################
## Assign bathymetry value to each extrapolation grid
## Gulf of Alaska
#################################
rm(list = ls())
# setwd( 'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
setwd( 'C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
##################################
## Import Libraries
#################################
library(marmap); library(sp); library(RANN); library(raster);
which_machine = c('Zack_MAC'=1, 'Zack_PC' =2, 'Zack_GI_PC'=3)[2]
##################################
## Load Extrapolation Grid used in VAST
#################################
modelno = '8'
setwd( c('',
'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/',
'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')[which_machine] )
load(paste0('VAST_output', modelno, '/', 'Spatial_Settings.RData'))
observed_depths = read.csv('data/data/GOA_multspp.csv')$BOTTOM_DEPTH
##################################
## Extract fine-scale bathymetry map
## Convert latlon to UTM zone 5
#################################
xmin <- -170
xmax <- -132
ymin <- 52
ymax <- 60.5
bathymap <- getNOAA.bathy(lon1 = xmin, lon2 = xmax,
lat1 = ymin, lat2 = ymax,
resolution = 1)
bathymap <- fortify.bathy(bathymap)
bathymap_coord = sp::SpatialPoints(coords = bathymap[,c('x', 'y')],
proj4string = CRS('+proj=aea +lat_1=55 +lat_2=65 +lat_0=50 +lon_0=-154 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0 ') )
cord.UTM <- sp::spTransform(bathymap_coord, CRS("+proj=utm +zone=5N"))
bathymap[,c('E_km', 'N_km')] = cord.UTM@coords / 1000
bathymap
bathy_idx = RANN::nn2(query=Extrapolation_List$Data_Extrap[,c('E_km','N_km')],
data = bathymap[,c('E_km', 'N_km')],
k = 1)$nn.idx
Extrapolation_List$Data_Extrap$depth = -bathymap$z[bathy_idx[,1]]
#####################
## Plot locations where depths are negative (land?)
#####################
plot(Extrapolation_List$Data_Extrap[,c('E_km', 'N_km')], pch = '.')
points(Extrapolation_List$Data_Extrap[Extrapolation_List$Data_Extrap$depth <=0,c('E_km', 'N_km')], pch = 16, col = 'red')
shape_dir = 'C:\\Users\\Zack Oyafuso\\Desktop\\survey_grids\\'
goa = readOGR(paste0(shape_dir, 'goagrid2019_landuntrawlsndmn.shp'))
goa
dir(shape_dir)
goa = readOGR(paste0(shape_dir, 'GOAdissolved_erase_dnr.shp'))
goa
goa = readOGR(paste0(shape_dir, 'goagrid2019_landuntrawlsndmn.shp'))
goa
extent(goa)
head(bathymap)
summary(bathymap)
##################################
## Assign bathymetry value to each extrapolation grid
## Gulf of Alaska
#################################
# setwd( 'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
setwd( 'C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
##################################
## Import Libraries
#################################
library(marmap); library(sp); library(RANN); library(raster);
which_machine = c('Zack_MAC'=1, 'Zack_PC' =2, 'Zack_GI_PC'=3)[3]
##################################
## Load Extrapolation Grid used in VAST
#################################
modelno = '6j'
setwd( c('',
'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/',
'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')[which_machine] )
load(paste0('VAST_output', modelno, '/', 'Spatial_Settings.RData'))
observed_depths = read.csv('data/data/GOA_multspp.csv')$BOTTOM_DEPTH
##################################
## Extract fine-scale bathymetry map
## Convert latlon to UTM zone 5
#################################
xmin <- -170
xmax <- -132
ymin <- 52
ymax <- 60.5
bathymap <- getNOAA.bathy(lon1 = xmin, lon2 = xmax,
lat1 = ymin, lat2 = ymax,
resolution = 1)
bathymap <- fortify.bathy(bathymap)
bathymap_coord = sp::SpatialPoints(coords = bathymap[,c('x', 'y')],
proj4string = CRS('+proj=longlat') )
cord.UTM <- sp::spTransform(bathymap_coord, CRS("+proj=utm +zone=5N"))
bathymap[,c('E_km', 'N_km')] = cord.UTM@coords / 1000
#####################
## Asssign bathymetry values of extrapolation cells to the nearest
## value in the bathymetry map
#####################
bathy_idx = RANN::nn2(query=Extrapolation_List$Data_Extrap[,c('E_km','N_km')],
data = bathymap[,c('E_km', 'N_km')],
k = 1)$nn.idx
Extrapolation_List$Data_Extrap$depth = -bathymap$z[bathy_idx[,1]]
#####################
## Plot locations where depths are negative (land?)
#####################
plot(Extrapolation_List$Data_Extrap[,c('E_km', 'N_km')], pch = '.')
points(Extrapolation_List$Data_Extrap[Extrapolation_List$Data_Extrap$depth <=0,c('E_km', 'N_km')], pch = 16, col = 'red')
#####################
## Assign negative bathymetry values (presumably land) to the shallowest
## bathymetry observed in the dataset
#####################
Extrapolation_List$Data_Extrap$depth[Extrapolation_List$Data_Extrap$depth <= min(observed_depths)] = min(observed_depths)
##################################
## Assign bathymetry value to each extrapolation grid
## Gulf of Alaska
#################################
rm(list = ls())
# setwd( 'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
setwd( 'C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
##################################
## Import Libraries
#################################
library(marmap); library(sp); library(RANN); library(raster);
# setwd( 'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
setwd( 'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/')
##################################
## Import Libraries
#################################
library(marmap); library(sp); library(RANN); library(raster);
which_machine = c('Zack_MAC'=1, 'Zack_PC' =2, 'Zack_GI_PC'=3)[2]
##################################
## Load Extrapolation Grid used in VAST
#################################
modelno = '8'
setwd( c('',
'C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/',
'C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')[which_machine] )
load(paste0('VAST_output', modelno, '/', 'Spatial_Settings.RData'))
observed_depths = read.csv('data/data/GOA_multspp.csv')$BOTTOM_DEPTH
observed_depths
##################################
## Extract fine-scale bathymetry map
## Convert latlon to UTM zone 5
#################################
xmin <- -170
xmax <- -132
ymin <- 52
ymax <- 60.5
bathymap <- getNOAA.bathy(lon1 = xmin, lon2 = xmax,
lat1 = ymin, lat2 = ymax,
resolution = 1)
bathymap <- fortify.bathy(bathymap)
bathymap_coord = sp::SpatialPoints(coords = bathymap[,c('x', 'y')],
proj4string = CRS('+proj=longlat') )
cord.UTM <- sp::spTransform(bathymap_coord, CRS("+proj=utm +zone=5N"))
bathymap[,c('E_km', 'N_km')] = cord.UTM@coords / 1000
#####################
## Asssign bathymetry values of extrapolation cells to the nearest
## value in the bathymetry map
#####################
bathy_idx = RANN::nn2(query=Extrapolation_List$Data_Extrap[,c('E_km','N_km')],
data = bathymap[,c('E_km', 'N_km')],
k = 1)$nn.idx
Extrapolation_List$Data_Extrap$depth = -bathymap$z[bathy_idx[,1]]
#####################
## Plot locations where depths are negative (land?)
#####################
plot(Extrapolation_List$Data_Extrap[,c('E_km', 'N_km')], pch = '.')
points(Extrapolation_List$Data_Extrap[Extrapolation_List$Data_Extrap$depth <=0,c('E_km', 'N_km')], pch = 16, col = 'red')
#####################
## Assign negative bathymetry values (presumably land) to the shallowest
## bathymetry observed in the dataset
#####################
Extrapolation_List$Data_Extrap$depth[Extrapolation_List$Data_Extrap$depth <= min(observed_depths)] = min(observed_depths)
# neg_depths = sum(Extrapolation_List$Data_Extrap$depth <=0)
# k = 2
# while(neg_depths != 0){
#   idxs = which(Extrapolation_List$Data_Extrap$depth <= 0)
#   Extrapolation_List$Data_Extrap$depth[idxs] = -bathymap$z[bathy_idx[idxs,k]]
#   neg_depths = sum(Extrapolation_List$Data_Extrap$depth <=0)
#   k = k + 1
# }
#############################
## Center depth and calculate depth^2
#############################
Extrapolation_List$Data_Extrap$DEPTH = scale(log(Extrapolation_List$Data_Extrap$depth))
Extrapolation_List$Data_Extrap$DEPTH2 = Extrapolation_List$Data_Extrap$DEPTH^2
#############################
## Plot Bathyetry Field
#############################
test = raster::rasterize(
x = Extrapolation_List$Data_Extrap[,c('E_km', 'N_km')],
y = raster(nrows=100, ncols=320,
xmn=min(Extrapolation_List$Data_Extrap$E_km),
xmx=max(Extrapolation_List$Data_Extrap$E_km),
ymn=min(Extrapolation_List$Data_Extrap$N_km),
ymx=max(Extrapolation_List$Data_Extrap$N_km),
crs = CRS("+proj=utm +zone=5N")),
field = Extrapolation_List$Data_Extrap$depth)
par(mar = c(0,0,0,0))
plot(test, axes = F, legend = F)
##########################
## Update Spatial Settings
##########################
Extrapolation_depths = Extrapolation_List$Data_Extrap
save(list = c("Extrapolation_depths"), file = 'Extrapolation_depths.RData')
source('~/.active-rstudio-document', echo=TRUE)
