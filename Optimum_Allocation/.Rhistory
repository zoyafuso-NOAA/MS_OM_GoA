coordinates(meuse.grid)<-c("x","y")
lm_lead <- lm(log(lead) ~ dist,data=meuse)
# summary(lm_lead)
lm_zinc <- lm(log(zinc) ~ dist,data=meuse)
# summary(lm_zinc)
kriging_lead = autoKrige(log(lead) ~ dist, meuse, meuse.grid)
kriging_lead = autoKrige(log(lead) ~ dist, meuse, meuse.grid)
kriging_zinc = autoKrige(log(zinc) ~ dist, meuse, meuse.grid)
df <- NULL
df$id <- meuse.grid$id
df$lead.pred <- kriging_lead$krige_output@data$var1.pred
df$lead.var <- kriging_lead$krige_output@data$var1.var
df$zinc.pred <- kriging_zinc$krige_output@data$var1.pred
df$zinc.var <- kriging_zinc$krige_output@data$var1.var
df$lon <- meuse.grid$x
df$lat <- meuse.grid$y
df$dom1 <- 1
df <- as.data.frame(df)
head(df)
library(SamplingStrata)
frame <- buildFrameSpatial(df=df,
id="id",
X=c("lead.pred","zinc.pred"),
Y=c("lead.pred","zinc.pred"),
variance=c("lead.var","zinc.var"),
lon="lon",
lat="lat",
domainvalue = "dom1")
cv <- as.data.frame(list(DOM=rep("DOM1",1),
CV1=rep(0.01,1),
CV2=rep(0.01,1),
domainvalue=c(1:1) ))
set.seed(1234)
solution <- optimStrata (
method = "spatial",
errors=cv,
framesamp=frame,
iter = 15,
pops = 10,
nStrata = 5,
fitting = c(summary(lm_lead)$r.square,summary(lm_zinc)$r.square),
range = c(kriging_lead$var_model$range[2],kriging_zinc$var_model$range[2]),
kappa=1,
writeFiles = FALSE,
showPlot = FALSE,
parallel = FALSE)
framenew <- solution$framenew
outstrata <- solution$aggr_strata
head(framenew)
str(framenew)
str(outstrata)
#Plot resuts
frameres <- SpatialPointsDataFrame(data=framenew, coords=cbind(framenew$LON,framenew$LAT) )
frameres2 <- SpatialPixelsDataFrame(points=frameres[c("LON","LAT")], data=framenew)
frameres2$LABEL <- as.factor(frameres2$LABEL)
spplot(frameres2,c("LABEL"), col.regions=bpy.colors(5))
#Select Sample
s <- selectSample(framenew,outstrata,writeFiles=FALSE)
s
optimStrata
library(SamplingStrata)
optimStrata
optimizeStrataSpatial
optimizeStrataSpatial
optimStrata
optimStrata
optimizeStrataSpatial
strataGenalgSpatial
buildStrataDFSpatial
buildStrataDFSpatial
library(SpatialStrata)
library(SamplingStrata)
optimStrata
optimizeStrataSpatial
strataGenalgSpatial
strataGenalgSpatial
library(SamplingStrata)
?rbgaSpatial
library(rnaturalearth)
devtools::install_github("ropensci/rnaturalearth")
traceback()
plot_maps(plot_set=plot_settings$plot_num[i],
Report=Report,
TmbData = TmbData,
Sdreport=Opt$SD,
PlotDF=MapDetails_List[["PlotDF"]],
MapSizeRatio=MapDetails_List[["MapSizeRatio"]],
working_dir = paste0(DateFile, plot_settings$var_name[i], '/' ),
Year_Set=Year_Set, Years2Include=Years2Include,
col = rev(heat.colors(100)),
mar=c(0,0,2,0), oma=c(3.5,3.5,0,0), cex=1.8,
category_names=levels(Data_Geostat[,'spp']))
library(VAST); library(mvtnorm)
install.packages("rnaturalearth")
library(rnaturalearth)
traceback(0)
traceback()
library(rastser)
library(raster)
library(rnaturalearth)
env <- asNamespace("rnaturalearth")
head(getNamespaceInfo(env, "S3methods"))
env <- asNamespace("rnaturalearth'0
env <- asNamespace("rnaturalearth')
env <- asNamespace("rnaturalearth")
update.packages(ask = FALSE, checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
remove.packages("rnaturalearth", lib="~/R/win-library/3.5")
install.packages('rnaturalearth')
library(rnaturalearth)
require(rnaturalearth)
devtools::install_github("ropenscilabs/rnaturalearthdata")
install.packages("rnaturalearthhires",
repos = "http://packages.ropensci.org",
type = "source")
library(rnaturalearthdata)
library(rnaturalearth)
library(rnaturalearth)
library(rnaturalearth)
library(rnaturalearth)
library(rnaturalearth)
library(TMBhelper)
rm(list = ls())
library(VAST); library(mvtnorm); library(SamplingStrata)
VAST_model = "6"
setwd('C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
# setwd('C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
wd = paste0("C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/",
"Optimum_Allocation/model_", VAST_model)
if(!dir.exists(wd)) dir.create(wd)
load(paste0('VAST_output',VAST_model,'/VAST_MS_GoA_Run.RData'))
load(paste0('VAST_output',VAST_model,'/Spatial_Settings.RData'))
load("C:/Users/Zack Oyafuso/Documents/Github/MS_OM_GoA/Extrapolation_depths.RData")
Year_Set = seq(min(Data_Geostat[,'Year']),max(Data_Geostat[,'Year']))
Years2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))
df = cbind(
data.frame(Domain = "GoA",
x = 1:Save$TmbData$n_g,
depth = Extrapolation_depths$depth),
apply(X = Save$Report$Index_gcyl[,,Years2Include,], MARGIN = 1:2, FUN = mean)
)
names(df)[-(1:3)] = gsub(x = Save$Spp, pattern = ' ', replacement = '_')
frame <- buildFrameDF(df = df,
id = "x",
X = "depth",
Y = gsub(x = Save$Spp, pattern = ' ', replacement = '_'),
domainvalue = "Domain")
#Settings for optimizer
settings = expand.grid(cv = c(0.2),
mut_change = c(0.01, 0.1, 0.5),
elitism_rate = c(0.1, 0.2, 0.5))
ns = Save$TmbData$n_c
rm(list  = ls()[!ls() %in% c('settings', 'frame', 'VAST_model', 'ns') ])
for(i in 1:nrow(settings)){
wd = paste0("C:/Users/Zack Oyafuso/Documents/",
"GitHub/MS_OM_GoA/Optimum_Allocation/",
"model_", VAST_model, "/",
'cv_', settings$cv[i], '_',
'mut_change_', settings$mut_change[i], '_',
'elitism_rate_', settings$elitism_rate[i], '.RData')
cv = list()
for(spp in 1:ns) cv[[paste0('CV', spp)]] = settings$cv[i]
cv[['DOM']] = 'GoA'; cv[['domainvalue']] = 1
cv <- as.data.frame(cv)
set.seed(1234 + i)
solution <- optimStrata(method = "continuous",
errors = cv,
framesamp = frame,
iter = 50,
pops = 100,
elitism_rate = settings$elitism_rate[i],
mut_chance = settings$mut_change[i],
nStrata = 10,
showPlot = T,
parallel = F)
strataStructure <- summaryStrata(solution$framenew,
solution$aggr_strata,
progress=FALSE)
save(list=c('strataStructure', 'solution'), file = wd)
}
#Settings for optimizer
settings = expand.grid(cv = c(0.15),
mut_change = c(0.01, 0.1, 0.5),
elitism_rate = c(0.1, 0.2, 0.5))
ns = Save$TmbData$n_c
rm(list  = ls()[!ls() %in% c('settings', 'frame', 'VAST_model', 'ns') ])
for(i in 1:nrow(settings)){
wd = paste0("C:/Users/Zack Oyafuso/Documents/",
"GitHub/MS_OM_GoA/Optimum_Allocation/",
"model_", VAST_model, "/",
'cv_', settings$cv[i], '_',
'mut_change_', settings$mut_change[i], '_',
'elitism_rate_', settings$elitism_rate[i], '.RData')
cv = list()
for(spp in 1:ns) cv[[paste0('CV', spp)]] = settings$cv[i]
cv[['DOM']] = 'GoA'; cv[['domainvalue']] = 1
cv <- as.data.frame(cv)
set.seed(1234 + i)
solution <- optimStrata(method = "continuous",
errors = cv,
framesamp = frame,
iter = 50,
pops = 100,
elitism_rate = settings$elitism_rate[i],
mut_chance = settings$mut_change[i],
nStrata = 10,
showPlot = T,
parallel = F)
strataStructure <- summaryStrata(solution$framenew,
solution$aggr_strata,
progress=FALSE)
save(list=c('strataStructure', 'solution'), file = wd)
}
rm(list = ls())
library(VAST); library(mvtnorm); library(SamplingStrata)
# setwd('C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
setwd('C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
VAST_model = "6b"
load(paste0('VAST_output',VAST_model,'/VAST_MS_GoA_Run.RData'))
load(paste0('VAST_output',VAST_model,'/Spatial_Settings.RData'))
load("C:/Users/zack.oyafuso/Work/Github/MS_OM_GoA/Extrapolation_depths.RData")
Year_Set = seq(min(Data_Geostat[,'Year']),max(Data_Geostat[,'Year']))
Years2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))
Ests_means = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = mean)
colnames(Ests_means) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_mean')
Ests_vars = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = var)
colnames(Ests_vars) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_var')
df = cbind(
data.frame(Domain = "GoA",
x = 1:Save$TmbData$n_g,
depth = Extrapolation_depths$depth,
Lon = Extrapolation_depths$Lon,
Lat = Extrapolation_depths$Lat),
Ests_means, Ests_vars
)
head(df)
frame <- buildFrameSpatial(df=df,
id="x",
X=c("depth"),
Y=paste0(gsub(x = Save$Spp, pattern = ' ', replacement = '_'), '_mean'),
variance=paste0(gsub(x = Save$Spp, pattern = ' ', replacement = '_'), '_var'),
lon="Lon",
lat="Lat",
domainvalue = "Domain")
load("C:/Users/Zack Oyafuso/Documents/Github/MS_OM_GoA/Extrapolation_depths.RData")
Year_Set = seq(min(Data_Geostat[,'Year']),max(Data_Geostat[,'Year']))
Years2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))
Ests_means = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = mean)
colnames(Ests_means) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_mean')
Ests_vars = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = var)
colnames(Ests_vars) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_var')
df = cbind(
data.frame(Domain = "GoA",
x = 1:Save$TmbData$n_g,
depth = Extrapolation_depths$depth,
Lon = Extrapolation_depths$Lon,
Lat = Extrapolation_depths$Lat),
Ests_means, Ests_vars
)
head(df)
frame <- buildFrameSpatial(df=df,
id="x",
X=c("depth"),
Y=paste0(gsub(x = Save$Spp, pattern = ' ', replacement = '_'), '_mean'),
variance=paste0(gsub(x = Save$Spp, pattern = ' ', replacement = '_'), '_var'),
lon="Lon",
lat="Lat",
domainvalue = "Domain")
#Settings for optimizer
settings = results = expand.grid(cv = c(0.2),
pops = c(25,50,100),
minnumstr = c(25, 50),
mut_change = c(0.01, 0.05, 0.1, 0.5),
elitism_rate = c(0.1, 0.2, 0.5))
ns = Save$TmbData$n_c
rm(list = ls()[!ls() %in% c('settings', 'frame', 'modelno', 'ns') ])
i = 1
library(SamplingStrata)
cv = list()
for(i in 1:ns) cv[[paste0('CV', i)]] = settings$cv[i]
cv[['DOM']] = 'GoA'; cv[['domainvalue']]=1
cv <- as.data.frame(cv)
set.seed(1234 + i)
solution <- optimStrata (
method = "spatial",
errors=cv,
framesamp=frame,
iter = 15,
pops = 20,
mut_chance = 0.1,
nStrata = 10,
fitting = rep(1, ns),
range = rep(1, ns),
kappa=1,
writeFiles = FALSE,
showPlot = TRUE,
parallel = F)
strataStructure <- summaryStrata(solution$framenew,
solution$aggr_strata,
progress=FALSE)
strataStructure
expected_CV(solution$aggr_strata)
sum(strataStructure$Allocation)
par(mar = c(0,0,0,0))
nstrata = nrow(strataStructure)
plot(goa_ras, col = brewer.pal(n = nstrata, name= 'Paired'), legend = T )
goa = SpatialPointsDataFrame(coords = Extrapolation_depths[,c('E_km', 'N_km')],
data = cbind(solution$framenew[,paste0('Y',1:ns)],
X1 = solution$indices$X1) )
library(raster); library(RColorBrewer); library(SamplingStrata)
goa = SpatialPointsDataFrame(coords = Extrapolation_depths[,c('E_km', 'N_km')],
data = cbind(solution$framenew[,paste0('Y',1:ns)],
X1 = solution$indices$X1) )
setwd('C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/Optimum_Allocation/')
load('../Extrapolation_depths.RData')
goa = SpatialPointsDataFrame(coords = Extrapolation_depths[,c('E_km', 'N_km')],
data = cbind(solution$framenew[,paste0('Y',1:ns)],
X1 = solution$indices$X1) )
# goa = SpatialPoints(coords = Extrapolation_depths[,c('E_km', 'N_km')] )
goa_ras = raster(goa, resolution = 5)
goa_ras =rasterize(x = goa, y = goa_ras, field = 'X1')
par(mar = c(0,0,0,0))
nstrata = nrow(strataStructure)
plot(goa_ras, col = brewer.pal(n = nstrata, name= 'Paired'), legend = T )
strataStructure
set.seed(1234 + i)
solution <- optimStrata (
method = "spatial",
errors=cv,
framesamp=frame,
iter = 15,
pops = 20,
mut_chance = 0.1,
nStrata = 10,
minnumstr = 20,
fitting = rep(1, ns),
range = rep(1, ns),
kappa=1,
writeFiles = FALSE,
showPlot = TRUE,
parallel = F)
rm(list = ls())
library(VAST); library(mvtnorm); library(SamplingStrata)
# setwd('C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
setwd('C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
VAST_model = "2a"
setwd('C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
VAST_model = "2a"
load(paste0('VAST_output',VAST_model,'/VAST_MS_GoA_Run.RData'))
load(paste0('VAST_output',VAST_model,'/Spatial_Settings.RData'))
load("C:/Users/Zack Oyafuso/Documents/Github/MS_OM_GoA/Extrapolation_depths.RData")
Year_Set = seq(min(Data_Geostat[,'Year']),max(Data_Geostat[,'Year']))
Years2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))
Ests_means = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = mean)
colnames(Ests_means) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_mean')
Ests_vars = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = var)
colnames(Ests_vars) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_var')
head(Extrapolation_depths)
df = cbind(
data.frame(Domain = "GoA",
x = 1:Save$TmbData$n_g,
depth = Extrapolation_depths$depth,
Lon = Extrapolation_depths$Lon,
Lat = Extrapolation_depths$Lat),
Ests_means, Ests_vars
)
Save$TmbData$n_g
rm(list = ls())
library(VAST); library(mvtnorm); library(SamplingStrata)
# setwd('C:/Users/Zack Oyafuso/Google Drive/VAST_Runs/')
setwd('C:/Users/zack.oyafuso/Work/GitHub/MS_OM_GoA/')
VAST_model = "2b"
load(paste0('VAST_output',VAST_model,'/VAST_MS_GoA_Run.RData'))
load(paste0('VAST_output',VAST_model,'/Spatial_Settings.RData'))
# load("C:/Users/Zack Oyafuso/Documents/Github/MS_OM_GoA/Extrapolation_depths.RData")
load("C:/Users/zack.oyafuso/Work/Github/MS_OM_GoA/Extrapolation_depths.RData")
Year_Set = seq(min(Data_Geostat[,'Year']),max(Data_Geostat[,'Year']))
Years2Include = which( Year_Set %in% sort(unique(Data_Geostat[,'Year'])))
Ests_means = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = mean)
colnames(Ests_means) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_mean')
Ests_vars = apply(X = Save$Report$Index_gcyl[,,Years2Include,1],
MARGIN = 1:2, FUN = var)
colnames(Ests_vars) = paste0(gsub(x = Save$Spp, pattern = ' ',
replacement = '_'), '_var')
df = cbind(
data.frame(Domain = "GoA",
x = 1:Save$TmbData$n_g,
depth = Extrapolation_depths$depth,
Lon = Extrapolation_depths$Lon,
Lat = Extrapolation_depths$Lat),
Ests_means, Ests_vars
)
head(df)
load("C:/Users/Zack Oyafuso/Documents/Github/MS_OM_GoA/Extrapolation_depths.RData")
df = cbind(
data.frame(Domain = "GoA",
x = 1:Save$TmbData$n_g,
depth = Extrapolation_depths$depth,
Lon = Extrapolation_depths$Lon,
Lat = Extrapolation_depths$Lat),
Ests_means, Ests_vars
)
head(df)
frame <- buildFrameSpatial(df=df,
id="x",
X=c("depth"),
Y=paste0(gsub(x = Save$Spp, pattern = ' ', replacement = '_'), '_mean'),
variance=paste0(gsub(x = Save$Spp, pattern = ' ', replacement = '_'), '_var'),
lon="Lon",
lat="Lat",
domainvalue = "Domain")
#Settings for optimizer
settings = results = expand.grid(cv = c(0.2),
pops = c(25,50,100),
minnumstr = c(25, 50),
mut_change = c(0.01, 0.05, 0.1, 0.5),
elitism_rate = c(0.1, 0.2, 0.5))
ns = Save$TmbData$n_c
rm(list = ls()[!ls() %in% c('settings', 'frame', 'modelno', 'ns') ])
i = 1
library(SamplingStrata)
wd = paste0("C:/Users/Zack Oyafuso/Documents/",
"GitHub/MS_OM_GoA/Optimum_Allocation/",
"model_", modelno, "/",
'cv_', settings$cv[i], '_',
'pop_', settings$pops[i], '_',
'minnumstr_', settings$minnumstr[i], '_',
'mutchange_', settings$mut_change[i], '_',
'elitism_rate_', settings$elitism_rate[i], '.RData')
cv = list()
for(i in 1:ns) cv[[paste0('CV', i)]] = settings$cv[i]
cv[['DOM']] = 'GoA'; cv[['domainvalue']]=1
cv <- as.data.frame(cv)
# cv
cv
set.seed(1234 + i)
solution <- optimStrata (
method = "spatial",
errors=cv,
framesamp=frame,
iter = 15,
pops = 10,
mut_chance = 0.1,
nStrata = 10,
minnumstr = 20,
fitting = rep(1, ns),
range = rep(1, ns),
kappa=1,
writeFiles = FALSE,
showPlot = TRUE,
parallel = F)
strataStructure <- summaryStrata(solution$framenew,
solution$aggr_strata,
progress=FALSE)
strataStructure
set.seed(1234 + i)
solution <- optimStrata (
method = "spatial",
errors=cv,
framesamp=frame,
iter = 15,
pops = 10,
mut_chance = 0.1,
nStrata = 5,
minnumstr = 20,
fitting = rep(1, ns),
range = rep(1, ns),
kappa=1,
writeFiles = FALSE,
showPlot = TRUE,
parallel = F)
strataStructure <- summaryStrata(solution$framenew,
solution$aggr_strata,
progress=FALSE)
strataStructure
goa = SpatialPointsDataFrame(coords = Extrapolation_depths[,c('E_km', 'N_km')],
data = cbind(solution$framenew[,paste0('Y',1:ns)],
X1 = solution$indices$X1) )
# goa = SpatialPoints(coords = Extrapolation_depths[,c('E_km', 'N_km')] )
goa_ras = raster(goa, resolution = 5)
goa_ras =rasterize(x = goa, y = goa_ras, field = 'X1')
par(mar = c(0,0,0,0))
nstrata = nrow(strataStructure)
plot(goa_ras, col = brewer.pal(n = nstrata, name= 'Paired'), legend = T )
setwd('C:/Users/Zack Oyafuso/Documents/GitHub/MS_OM_GoA/Optimum_Allocation/')
load('../Extrapolation_depths.RData')
goa = SpatialPointsDataFrame(coords = Extrapolation_depths[,c('E_km', 'N_km')],
data = cbind(solution$framenew[,paste0('Y',1:ns)],
X1 = solution$indices$X1) )
# goa = SpatialPoints(coords = Extrapolation_depths[,c('E_km', 'N_km')] )
goa_ras = raster(goa, resolution = 5)
goa_ras =rasterize(x = goa, y = goa_ras, field = 'X1')
par(mar = c(0,0,0,0))
nstrata = nrow(strataStructure)
plot(goa_ras, col = brewer.pal(n = nstrata, name= 'Paired'), legend = T )
expected_CV(solution$aggr_strata)
dir()
strataStructure
