###############################################################################
## Project:       Simulate Data
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:   simulate 10 sets of data for each species and save
###############################################################################
rm(list = ls())
##################################################
####    Import required packages
##################################################
library(FishStatsUtils)
##################################################
####   Set up directories
####
####   Set up some constants of the optimization
####   Multispeceis: Spatiotemporal Variance, species specific CV constraints
####   Single_Species: Spatiotemporal Variance, univariate optimization,
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
VAST_dir <- "G:/Oyafuso/VAST_Runs_EFH/Single_Species/"
##################################################
####    Load Data
##################################################
load(paste0(github_dir, "data/RMSE_VAST_models.RData"))
load(paste0(github_dir, "data/optimization_data.RData"))
###############################################################################
## Project:
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:
###############################################################################
rm(list = ls())
##################################################
####    Import required packages
##################################################
library(FishStatsUtils)
##################################################
####   Set up directories
####
####   Set up some constants of the optimization
####   Multispeceis: Spatiotemporal Variance, species specific CV constraints
####   Single_Species: Spatiotemporal Variance, univariate optimization,
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
VAST_dir <- "G:/Oyafuso/VAST_Runs_EFH/Single_Species/"
##################################################
####    Load Data
##################################################
load(paste0(github_dir, "data/RMSE_VAST_models.RData"))
RMSE
load(paste0(github_dir, "data/optimization_data.RData"))
###############################################################################
## Project:
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:
###############################################################################
rm(list = ls())
##################################################
####    Import required packages
##################################################
library(FishStatsUtils)
##################################################
####   Set up directories
####
####   Set up some constants of the optimization
####   Multispeceis: Spatiotemporal Variance, species specific CV constraints
####   Single_Species: Spatiotemporal Variance, univariate optimization,
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
VAST_dir <- "G:/Oyafuso/VAST_Runs_EFH/Single_Species/"
##################################################
####    Load Data
##################################################
load(paste0(github_dir, "data/RMSE_VAST_models.RData"))
load(paste0(github_dir, "data/optimization_data.RData"))
##################################################
####    Result Object
##################################################
vast_index <- data.frame()
for (ispp in 1:ns_all) {
temp_index <- read.csv(
paste0(VAST_dir,
sci_names_all[ispp],
ifelse(RMSE$depth_in_model[ispp], "_depth", ""),
"/diagnostics/Table_for_SS3.csv"))[Years2Include,]
vast_index = rbind(vast_index,
with( temp_index,
data.frame(
spp = sci_names_all[ispp],
year = Year,
est = Estimate_metric_tons,
cv = SD_mt / Estimate_metric_tons)
)
)
}
###############################################################################
## Project:
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:
###############################################################################
rm(list = ls())
##################################################
####    Import required packages
##################################################
library(FishStatsUtils)
##################################################
####   Set up directories
####
####   Set up some constants of the optimization
####   Multispeceis: Spatiotemporal Variance, species specific CV constraints
####   Single_Species: Spatiotemporal Variance, univariate optimization,
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
VAST_dir <- "G:/Oyafuso/VAST_Runs_EFH/Single_Species/"
##################################################
####    Load Data
##################################################
load(paste0(github_dir, "data/RMSE_VAST_models.RData"))
load(paste0(github_dir, "data/optimization_data.RData"))
##################################################
####    Result Object
##################################################
vast_index <- data.frame()
ispp = 1
temp_index <- read.csv(
paste0(VAST_dir,
sci_names_all[ispp],
ifelse(RMSE$depth_in_model[ispp], "_depth", ""),
"/diagnostics/Table_for_SS3.csv"))[Years2Include,]
vast_index = rbind(vast_index,
with( temp_index,
data.frame(
spp = sci_names_all[ispp],
year = Year,
est = Estimate_metric_tons,
cv = SD_mt / Estimate_metric_tons)
)
)
##################################################
####    Result Object
##################################################
vast_index <- data.frame()
for (ispp in 1:ns_all) {
temp_index <- read.csv(
paste0(VAST_dir,
sci_names_all[ispp],
ifelse(RMSE$depth_in_model[ispp], "_depth", ""),
"/diagnostics/Table_for_SS3.csv"))[Years2Include,]
vast_index = rbind(vast_index,
with( temp_index,
data.frame(
spp = sci_names_all[ispp],
year = Year,
est = Estimate_metric_tons,
cv = SD_mt / Estimate_metric_tons)
)
)
}
##################################################
####    Plot
##################################################
par(mar = c(3,12,1,1))
boxplot(cv ~ spp,
data = vast_index,
horizontal = T,
las = 1,
ann = F,
ylim = c(0, 0.5))
boxplot(cv ~ spp,
data = vast_index,
horizontal = T,
las = 1,
ann = F,
ylim = c(0, 0.6))
##################################################
####    Plot
##################################################
par(mar = c(3,13,1,1))
boxplot(cv ~ spp,
data = vast_index,
horizontal = T,
las = 1,
ann = F,
ylim = c(0, 0.6))
###############################################################################
## Project:
## Author:        Zack Oyafuso (zack.oyafuso@noaa.gov)
## Description:
###############################################################################
rm(list = ls())
##################################################
####    Import required packages
##################################################
library(FishStatsUtils)
##################################################
####   Set up directories
####
####   Set up some constants of the optimization
####   Multispeceis: Spatiotemporal Variance, species specific CV constraints
####   Single_Species: Spatiotemporal Variance, univariate optimization,
##################################################
which_machine <- c("Zack_MAC" = 1, "Zack_PC" = 2, "Zack_GI_PC" = 3)[3]
github_dir <- paste0(c("/Users/zackoyafuso/Documents/",
"C:/Users/Zack Oyafuso/Documents/",
"C:/Users/zack.oyafuso/Work/")[which_machine],
"GitHub/Optimal_Allocation_GoA/")
VAST_dir <- "G:/Oyafuso/VAST_Runs_EFH/Single_Species/"
##################################################
####    Load Data
##################################################
load(paste0(github_dir, "data/RMSE_VAST_models.RData"))
load(paste0(github_dir, "data/optimization_data.RData"))
##################################################
####    Result Object
##################################################
vast_index <- data.frame()
for (ispp in 1:ns_all) {
temp_index <- read.csv(
paste0(VAST_dir,
sci_names_all[ispp],
ifelse(RMSE$depth_in_model[ispp], "_depth", ""),
"/diagnostics/Table_for_SS3.csv"))[Years2Include,]
vast_index = rbind(vast_index,
with( temp_index,
data.frame(
spp = sci_names_all[ispp],
year = Year,
est = Estimate_metric_tons,
cv = SD_mt / Estimate_metric_tons)
)
)
}
##################################################
####    Plot
##################################################
par(mar = c(3,13,1,1))
boxplot(cv ~ spp,
data = vast_index,
horizontal = T,
las = 1,
ann = F,
ylim = c(0, 0.6))
##################################################
####    Save
##################################################
save(list = "vast_index",
file = paste0(github_dir, "data/vast_index.RData"))
source('~/GitHub/MS_OM_GoA/ForMadison/cross_validation_results.R', echo=TRUE)
irow
for (irow in (297:nrow(CV_df)) ) {
#Load fitted object
result_dir <- paste0(VAST_dir, CV_df$species[irow],
ifelse(CV_df$depth[irow],  "_depth", ""), "/")
filename <- paste0(result_dir, "CV_", CV_df$fold[irow], "/fit.RData")
if ( file.exists(filename) ){
load(filename)
#Final Gradient
CV_df$max_grad[irow] <-
max(abs(fit_new$parameter_estimates$diagnostics$final_gradient))
#Check whether hessian matrix is positive definite
CV_df$pdHess[irow] <- fit_new$parameter_estimates$SD$pdHess
#check_fit chekcs bounds, TRUE is bad and FALSE is good
CV_df$bound_check[irow] <- (check_fit(fit_new$parameter_estimates))
CV_df$pred_nll[irow] <- fit_new$Report$pred_jnll
#Extract incides of withheld data
withheld_idx <- which(fit_new$data_list$PredTF_i == T)
#Withheld data locations, species/year indices, observed CPUE
withheld_df <- data.frame(
idx =  withheld_idx,
E_km = fit_new$spatial_list$loc_i[withheld_idx,"E_km"],
N_km = fit_new$spatial_list$loc_i[withheld_idx,"N_km"],
year = 1+fit_new$data_list$t_i[withheld_idx],
obs_density = (fit_new$data_frame$b_i/fit_new$data_frame$a_i)[withheld_idx]
)
#Extrapolation Grid locations
loc_g <- fit_new$spatial_list$loc_g
#which extrapoaltion grid cells are closest to each withheld data location
grid_idx <- RANN::nn2(query = withheld_df[,c("E_km", "N_km")],
data = loc_g,
k = 1)$nn.idx
for (jrow in 1:nrow(withheld_df)) {
withheld_df$pred_density[jrow] <-
fit_new$Report$D_gct[grid_idx[jrow], , withheld_df$year[jrow]]
}
#Calculate mean absolute error and root mean square error
CV_df$MAE[irow] = mean(abs(withheld_df$obs_density -
withheld_df$pred_density))
CV_df$RMSE[irow] = sqrt(mean((withheld_df$obs_density -
withheld_df$pred_density)^2))
#Calculate mean predicted density for calculation of RRMSE and RMAE
mean_pred_density <- mean(withheld_df$obs_density)
CV_df$RRMSE[irow] <- CV_df$RMSE[irow] / mean_pred_density
CV_df$RMAE[irow] <- CV_df$MAE[irow] / mean_pred_density
print(paste0("Done with: ", CV_df$species[irow], ", ",
ifelse(CV_df$depth[irow], "Depth, ", "No Depth, "),
"Fold Number ", CV_df$fold[irow]))
}
}
irow
for (irow in (302:nrow(CV_df)) ) {
#Load fitted object
result_dir <- paste0(VAST_dir, CV_df$species[irow],
ifelse(CV_df$depth[irow],  "_depth", ""), "/")
filename <- paste0(result_dir, "CV_", CV_df$fold[irow], "/fit.RData")
if ( file.exists(filename) ){
load(filename)
#Final Gradient
CV_df$max_grad[irow] <-
max(abs(fit_new$parameter_estimates$diagnostics$final_gradient))
#Check whether hessian matrix is positive definite
CV_df$pdHess[irow] <- fit_new$parameter_estimates$SD$pdHess
#check_fit chekcs bounds, TRUE is bad and FALSE is good
CV_df$bound_check[irow] <- (check_fit(fit_new$parameter_estimates))
CV_df$pred_nll[irow] <- fit_new$Report$pred_jnll
#Extract incides of withheld data
withheld_idx <- which(fit_new$data_list$PredTF_i == T)
#Withheld data locations, species/year indices, observed CPUE
withheld_df <- data.frame(
idx =  withheld_idx,
E_km = fit_new$spatial_list$loc_i[withheld_idx,"E_km"],
N_km = fit_new$spatial_list$loc_i[withheld_idx,"N_km"],
year = 1+fit_new$data_list$t_i[withheld_idx],
obs_density = (fit_new$data_frame$b_i/fit_new$data_frame$a_i)[withheld_idx]
)
#Extrapolation Grid locations
loc_g <- fit_new$spatial_list$loc_g
#which extrapoaltion grid cells are closest to each withheld data location
grid_idx <- RANN::nn2(query = withheld_df[,c("E_km", "N_km")],
data = loc_g,
k = 1)$nn.idx
for (jrow in 1:nrow(withheld_df)) {
withheld_df$pred_density[jrow] <-
fit_new$Report$D_gct[grid_idx[jrow], , withheld_df$year[jrow]]
}
#Calculate mean absolute error and root mean square error
CV_df$MAE[irow] = mean(abs(withheld_df$obs_density -
withheld_df$pred_density))
CV_df$RMSE[irow] = sqrt(mean((withheld_df$obs_density -
withheld_df$pred_density)^2))
#Calculate mean predicted density for calculation of RRMSE and RMAE
mean_pred_density <- mean(withheld_df$obs_density)
CV_df$RRMSE[irow] <- CV_df$RMSE[irow] / mean_pred_density
CV_df$RMAE[irow] <- CV_df$MAE[irow] / mean_pred_density
print(paste0("Done with: ", CV_df$species[irow], ", ",
ifelse(CV_df$depth[irow], "Depth, ", "No Depth, "),
"Fold Number ", CV_df$fold[irow]))
}
}
##################################################
####  Calculate summed predicted NLL across folds and Mean RRMSE across folds
##################################################
tidyr::spread(data = aggregate(pred_nll ~ species + depth,
data = CV_df,
FUN = sum),
key = "depth",
value = "pred_nll")
RMSE <- tidyr::spread(data = aggregate(RMSE ~ species + depth,
data = CV_df,
FUN = mean),
key = "depth",
value = "RMSE")
RMSE$depth_in_model <- c(F, T)[apply(X = RMSE[,-1],
MARGIN = 1,
FUN = which.min)]
RMSE
##################################################
####   Create the result object that would go into the optimizations
##################################################
N <- nrow(Extrapolation_depths)
D_gct = Index <- array(dim = c(N, ns, 24),
dimnames = list(NULL, which_spp, NULL))
for(ispp in 1:ns){
depth_in_model <- RMSE$depth_in_model[ispp]
result_dir = paste0(VAST_dir, RMSE$species[ispp],
ifelse(depth_in_model, "_depth", ""),
"/")
load(paste0(result_dir, "/fit.RData"))
D_gct[,ispp,] = fit$Report$D_gct[,1,]
Index[,ispp,] = fit$Report$Index_gctl[,1, ,1]
print(result_dir)
}
##################################################
####   Save
##################################################
save("RMSE", file = paste0(github_dir, "/data/RMSE_VAST_models.RData"))
save("D_gct", file = paste0(github_dir, "/data/fit_density.RData") )
save("Index", file = paste0(github_dir, "/data/fit_index.RData") )
dimnames(D_gct)
RMSE
